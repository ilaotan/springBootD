<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.tanlsh</groupId>
    <artifactId>springBootD</artifactId>
    <packaging>jar</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>springBootD Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <java.version>1.7</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <kaptcha.version>2.3.2</kaptcha.version>
        <beetl.version>2.7.22</beetl.version>
        <swagger.version>2.2.2</swagger.version>
        <shiro.version>1.4.0</shiro.version>
        <ehcache.version>2.10.4</ehcache.version>
        <commons-lang3.version>3.6</commons-lang3.version>
        <commons-codec.version>1.10</commons-codec.version>
        <commons-io.version>2.5</commons-io.version>
        <fastjson.version>1.2.38</fastjson.version>
        <lombok.version>1.16.16</lombok.version>
        <mybatis-spring-boot-starter.version>1.3.1</mybatis-spring-boot-starter.version>
        <mapper-spring-boot-starter.version>1.1.4</mapper-spring-boot-starter.version>
        <pagehelper-spring-boot-starter.version>1.2.1</pagehelper-spring-boot-starter.version>
        <druid-spring-boot-starter.version>1.1.2</druid-spring-boot-starter.version>
        <slf4j-api.version>1.7.25</slf4j-api.version>
        <junit.version>4.12</junit.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.7.RELEASE</version>
    </parent>

    <!-- 中央仓库 使用maven官方跟开源中国的库 -->
    <repositories>
        <repository>
            <id>maven-repo2</id>
            <name>maven-repo2</name>
            <layout>default</layout>
            <url>http://repo2.maven.org/maven2/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>maven2-repo</id>
            <name>maven2 Repository</name>
            <url>http://repo2.maven.org/maven2/</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- cache -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>


        <!-- 支持热部署 idea下使用 ctrl+F9重新编译即可生效,注意看 META-INF下spring-devtools.properties里的配置  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <!-- 阿里的json互转工具类-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!--shiro依赖-->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
        </dependency>


        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis-spring-boot-starter.version}</version>
        </dependency>
        <!--mapper-->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>${mapper-spring-boot-starter.version}</version>
        </dependency>
        <!--pagehelper-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper-spring-boot-starter.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-spring-boot-starter.version}</version>
        </dependency>

        <!-- Mybatis Generator -->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.2</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.penggle</groupId>
            <artifactId>kaptcha</artifactId>
            <version>${kaptcha.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>beetl</artifactId>
            <version>${beetl.version}</version>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>


        <!-- for test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <finalName>${artifactId}_${timestamp}</finalName>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration><!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>${main.startClass}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- clean package -Dmaven.test.skip=true -Prepackage -->
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 打包时,输出文件加上日期后缀 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <configuration>
                    <timestampFormat>yyyyMMdd_HHmm</timestampFormat>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>create-timestamp</goal>
                        </goals>
                    </execution>
                </executions>
                <inherited>false</inherited>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <!--
                        如果是简单的服务器登录配置 请参考官网  http://www.mojohaus.org/wagon-maven-plugin/usage.html
                        此处的注释是高级玩法.
                        如果服务器配置密钥登录 需要在maven的settings.xml里配置
                             <server>
                              <id>serverId</id>
                              <username>centos</username>
                              <privateKey>E://sonli//id_rsa.id_rsa</privateKey>
                            </server>
                            注意如果是idea下,需要手动到maven项 User Setting File的右侧勾选覆盖按钮.
                            如果提示.ssh/known_hosts 创建失败 请到对应目录使用cmd命令  mkdir .ssh   来创建.ssh文件夹
                            如果项目分模块 idea下打包命令需要在Web模块下单独打包 比较恶心...
                            clean package wagon:upload-single wagon:sshexec -Dmaven.test.skip=true
                     -->
                    <!-- 此处保持与settings.xml里的一致 -->
                    <serverId>serverId</serverId>
                    <!-- 文件名与web模块下 <build><finalName>里写的一致 -->
                    <fromFile>target/${artifactId}_${timestamp}.jar</fromFile>
                    <!-- 这个要改成你自己的ip 及你自己的项目存放路径 -->
                    <url>scp://centos@172.16.120.122/home/centos/springboot/springbootD</url>
                    <commands>
                        <command><![CDATA[kill -9 `ps -ef|grep ${artifactId}_ | grep -v "grep"|awk '{print   $2}'`]]></command>
                        <!-- cd到的目录需要你改成你自己的 这里尽量模拟用户的操作指令 -->
                        <command><![CDATA[cd /home/centos/springboot/springbootD && sh /usr/sbin/springboot.sh ${artifactId}_${timestamp}.jar]]></command>
                    </commands>
                    <!-- 允许执行出错时继续往下执行 这里加上是因为command命令第一句kill时,如果进程不存在会报错 -->
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
        </plugins>

        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.12</version>
            </extension>
        </extensions>
    </build>
</project>
